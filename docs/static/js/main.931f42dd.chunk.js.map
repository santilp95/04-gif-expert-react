{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetechGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","valor","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetechGifs","key","GifExperApp","catgory","divRoot","document","getElementById","ReactDOM","render"],"mappings":"gPAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,SAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAwB5C,OACI,0BAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAzBc,SAACP,GAEvB,IAAMQ,EAAOR,EAAES,OAAOH,MACtBR,EAAcU,QA6BtBd,EAAYgB,UAAY,CACpBf,c,OAAegB,EAAUC,KAAKC,Y,2BCzCpBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGII,MAAMF,GAHV,cAGdG,EAHc,gBAICA,EAAUC,OAJX,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCERO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFV,SAACA,GAAc,IAAD,EACbnB,mBAAS,CAC/B0B,KAAK,GACLa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KA2BvC,OApBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,YAAW,WAGPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGf,UAGZ,CAACpB,IAIIqB,EDtBwBM,CAAc3B,GAAjCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAGpB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,uBAAGJ,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aAIHH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UElBvBmB,EAAc,WAAM,MAGMhD,mBAAS,CAAC,cAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAc7B,OACI,oCACI,2CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQS,EAAWoB,KAAI,SAACqB,GAAD,OACX,kBAAC,EAAD,CACIF,IAAKE,EACL9B,SAAU8B,UCvBhCC,G,MAAUC,SAASC,eAAe,SAGxCC,IAASC,OACP,kBAAC,EAAD,MACAJ,K","file":"static/js/main.931f42dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n// llamar el componente atravez d destructurizacion\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Texto');\r\n\r\n    const handleInputChange = (e)=>{\r\n        // con esto se caputra el valor\r\n        const valor= e.target.value;\r\n        setInputValue(valor);\r\n    }\r\n    // recibe el event y se lo mando a algo ene ste ejemplo a form\r\n    const handleSubmit = (e)=>{\r\n        // para prevenir el comportamiento por defecto del formulario(osea que actualice toda la pagina)\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            // recibe las categorias del componente padre e isnerta con el inputValue la nuestra\r\n            setCategories(categories=>[inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n       \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n// hacer obligatorio mandar la funcion\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const  getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qsUmBiU0pSR30iCqtxxSlrEeVjYfJAGP`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetechGifs } from '../hooks/useFetechGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetechGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                    {\r\n                        images.map((img)=>\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\nexport const useFetechGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n    \r\n    // esto funciona para ejecutar cuando el compnente se rendiriza por primera vez si se manda el array vacio, en caso de cambiar algo en este ejemplo la categoria\r\n    useEffect(() => {\r\n        // peticion http getGitst con el then mandamos lo de la peticion\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n\r\n                setTimeout(()=>{\r\n\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                },3000);               \r\n            })\r\n        \r\n    },[category])\r\n\r\n  \r\n\r\n    return state; // es el objeto \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExperApp = () => {\r\n\r\n    //const categories = ['One Punch','Naruto','JOJO'];\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n   \r\n   /*const handleAdd  =()=>{\r\n       // forma de a√±adir algo con useStarw\r\n       const add='HunterXHunter'\r\n       setCategories([...categories,add]);     \r\n   }*/\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((catgory ) =>\r\n                        <GifGrid\r\n                            key={catgory}\r\n                            category={catgory}/>\r\n                    )   \r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExperApp } from './GifExperApp';\n\nimport './index.css';\n\n\nconst divRoot = document.getElementById('root')\n\n\nReactDOM.render(\n  <GifExperApp/>,\n  divRoot\n);\n\n//gifexp"],"sourceRoot":""}